service: storefront-api

frameworkVersion: '4'

provider:
  name: aws
  runtime: nodejs20.x
  stage: ${opt:stage, 'dev'}
  region: eu-west-2
  memorySize: 1024  # Increase memory for better performance
  timeout: 29
  environment:
    NODE_ENV: ${opt:stage, 'dev'}
    DATABASE_URL: ${ssm:/storefront/${opt:stage, 'dev'}/DATABASE_URL}
    DB_HOST: ${ssm:/storefront/${opt:stage, 'dev'}/DB_HOST}
    DB_PORT: ${ssm:/storefront/${opt:stage, 'dev'}/DB_PORT}
    DB_USERNAME: ${ssm:/storefront/${opt:stage, 'dev'}/DB_USERNAME}
    DB_PASSWORD: ${ssm:/storefront/${opt:stage, 'dev'}/DB_PASSWORD}
    DB_DATABASE: ${ssm:/storefront/${opt:stage, 'dev'}/DB_DATABASE}
    JWT_SECRET: ${ssm:/storefront/${opt:stage, 'dev'}/JWT_SECRET}
    FRONTEND_URL: ${ssm:/storefront/${opt:stage, 'dev'}/FRONTEND_URL}
    USE_FALLBACK_DATA: 'true'  # Added this flag for using fallback data
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - ssm:GetParameter
            - ssm:GetParameters
          Resource: 
            - arn:aws:ssm:${self:provider.region}:*:parameter/storefront/${self:provider.stage}/*
  apiGateway:
    binaryMediaTypes:
      - 'image/jpeg'
      - 'image/png'
      - 'application/octet-stream'

functions:
  api:
    handler: dist/lambda.handler
    events:
      - http:
          path: /
          method: ANY
          cors: true
      - http:
          path: /{proxy+}
          method: ANY
          cors: true

  test:
    handler: dist/simple-lambda.handler
    events:
      - http:
          path: /test
          method: get

package:
  patterns:
    - 'dist/**'
    - 'node_modules/**'
    - '!node_modules/.bin/**'
    - '!.git/**'
    - '!test/**'